const btnAdd = document.querySelector('#add');
const countSize = document.querySelector('#size');

// проверка на максимальную длину строки, которую браузер сможет записать в value localstorage
// и дальнейший подсчёт этой длины

// сложности с которыми столкнулся:
  // 1. данный вариант функции конкатинирует результат, в случае записи без ошибки в ls
  // это несёт погрешность в подсчёте, тк длина строки растёт в геометричсекой прогрессии каждую итерацию,
  // при изменении логики на вынесение value в постоянную величину, и каждую итерации сложение её с totalValue
  // получаю долгое выполнение скрипта и ошибку от браузера, как я понимаю, из за большого количества операций

  // 2. при исполнении в текущей реализации получаю результат 8 388 608, что является длиной строки,
  // символ в javascript хранится как UTF-16 (занимает 2 байта), значит требуется умножить результат на 2,
  // чтобы получить количество байт (итог: 16 777 216), чтобы из байт получить мегабайты, требуется разделить
  // 16 777 216 на 1 048 576 (1024 * 1024), результат 16 мегабайт, что согластно публичной информации
  // о максимальном размере localStorage в Google Chrome быть не может

  // вижу два варианта решения предположительной ошибки, либо убрать умножение на 2 (размер байта символа),
  // тем самым нивелировать последнюю конкатенацию, которая умножает на 2 длину массива, после появления ошибки,
  // либо разделить на итоговую длину, что считаю более читабельным вариантом

const calculateSpaceLocalStorage = () => {
  let value = 'a';

  // для более точной проверки очищяем все возможные данные в хранилище
  localStorage.clear();

  // запускаем бесконечный цикл, который остановится,
  // только если блок try catch вернет ошибку
  while (true) {
    try {
      localStorage.setItem('', value);
      // конкатенация строки, при каждой итерации цикла, длина строки фактически умножается на 2
      value += value;
    } catch {
      break
    }
  }

  // Каждая длина должна умножается на 2?, поскольку символ в javascript хранится как UTF-16 (занимает 2 байта).
  return Math.floor((value.length / 2) * 2);
}

btnAdd.addEventListener('click', () => {
  const byte = calculateSpaceLocalStorage();
  const mb = (byte / 1048576).toFixed(1);

  localStorage.clear();

  countSize.textContent = `${byte} Byte || ${mb} Mb`; // 8388608 byte || 8.0 Mb
})
